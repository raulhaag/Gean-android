plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android' version '1.8.0' apply false
}

android {
    compileSdk 34

    def versionPropsFile = file('version.properties')
    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))

        def code = versionProps['VERSION_CODE'].toInteger() + 1

        versionProps['VERSION_CODE'] = code.toString()
        versionProps.store(versionPropsFile.newWriter(), null)

        defaultConfig {
            applicationId "ar.rulosoft.gean"
            minSdk 21
            //noinspection EditedTargetSdkVersion
            targetSdk 34
            versionCode code
            versionName "1.0"

            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        }
    }else{
        throw new GradleException("Could not read version.properties!")
    }


        splits {

        // Configures multiple APKs based on ABI.
        abi {

            // Enables building multiple APKs per ABI.
            enable true

            // By default all ABIs are included, so use reset() and include to specify that you only
            // want APKs for x86 and x86_64.

            // Resets the list of ABIs for Gradle to create APKs for to none.
            reset()

            // Specifies a list of ABIs for Gradle to create APKs for.
            include "x86", "x86_64", "armeabi-v7a", "arm64-v8a"

            // Specifies that you don't want to also generate a universal APK that includes all ABIs.
            universalApk true
        }
    }

    signingConfigs {
        release {
            storeFile file("../geanse.jks")
            storePassword 'geanse'
            keyAlias 'geanse'
            keyPassword 'geanse'
        }
        debug {
            storeFile file("../geanse.jks")
            storePassword 'geanse'
            keyAlias 'geanse'
            keyPassword 'geanse'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
    }
    namespace 'ar.rulosoft.gean'
    buildToolsVersion '34.0.0'
}

dependencies {
    implementation "androidx.media3:media3-exoplayer:1.2.0"
    implementation "androidx.media3:media3-exoplayer-dash:1.2.0"
    implementation "androidx.media3:media3-ui:1.2.0"
    implementation "androidx.media3:media3-exoplayer-hls:1.2.0"
    implementation group: 'com.grack', name: 'nanojson', version: '1.3'
    implementation group: 'org.nanohttpd', name: 'nanohttpd', version: '2.3.1'
    implementation("com.squareup.okhttp3:okhttp:4.9.3")
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment:2.7.6'
    implementation 'androidx.navigation:navigation-ui:2.7.6'
    implementation 'androidx.leanback:leanback:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}